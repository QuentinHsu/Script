/**
 * @description 清理工作区下的 node modules
 * @create 2023-02-13 20:16:16
 * @update 2023-02-13 20:16:16
 * @version 1.0
 */
const fs = require('node:fs')
const path = require('node:path')
const childProcess = require('node:child_process')

console.log('🚗 开始清理繁重的 node_modules 啦！')

// 需要清理的目录
let workSpacePath = '/Users/quentin/Work-Space/Personal/GitHub/Open-Source'

console.log('💁 您所设置的 Work Space 路径：', workSpacePath)
console.log('🚦 当前路径下子级路径个数：', workSpacePath.length)

if (!fs.existsSync(workSpacePath)) {
  console.log('⛔️ 该 Work Space 路径不存在！请更改！')
  return
}
console.log('🔎 正在筛选包含 node_modules 文件夹的路径')
// 筛选 workSpace 下的子级路径
const workSpaceChildPaths = fs
  .readdirSync(workSpacePath)
  .filter(item => {
    const childPathStat = fs.lstatSync(path.join(workSpacePath, item))
    // 确保是个文件夹路径，而不是个文件路径
    if (childPathStat.isDirectory()) {
      return true
    }
  })
  .map(item => {
    return path.join(workSpacePath, item)
  })

const workSpaceChildPathIncludeNodeModule = workSpaceChildPaths.filter(item => {
  return fs.existsSync(path.join(item, 'node_modules'))
})

if (!workSpaceChildPathIncludeNodeModule.length) {
  console.log(
    '🙅 当前 WorkSpace 无需清理！因为该 WorkSpace 子级路径下没有包含 node_modules 文件夹。'
  )
}

workSpaceChildPathIncludeNodeModule.forEach(item => {
  const beRemovedPath = path.join(item, 'node_modules')
  childProcess
    .exec(`rm -rf ${beRemovedPath}`, (err, stdout, stderr) => {
      if (err) {
        console.log(err)
        return
      }
    })
    .on('exit', code => {
      console.log('🎉 删除成功！ 路径：', beRemovedPath)
    })
})
