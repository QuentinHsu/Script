#  /*
#  * @description 清理工作区下的 node modules
#  * @create 2023-02-13 20:16:16
#  * @update 2023-02-13 20:16:16
#  * @version 1.0
#  */
import os
import shutil
import sys
from pathlib import Path

if __name__ == '__main__':
    print('🚗 开始清理繁重的 node_modules 啦！')
    work_space_path = '/Users/quentin/Work-Space/Personal/GitHub/Open-Source'
    if not os.path.exists(work_space_path):
        print('💁 您所设置的 Work Space 路径：', work_space_path)
        print('⛔️ 该 Work Space 路径不存在！请更改！')
        sys.exit(0)

    def get_assigned_path_child_dir_list(assigned_path):
        for root, dirs, files in os.walk(assigned_path):
            print('💁 您所指定清理的 WorkSpace 路径:', assigned_path)
            print('🚦 当前路径下子级路径个数：', len(assigned_path))
            return dirs

    dir_list = get_assigned_path_child_dir_list(work_space_path)

    node_modules_paths = []
    print("🔎 正在筛选包含 node_modules 文件夹的路径")
    for dir_item in dir_list:
        dir_child_node_modules = Path(work_space_path + dir_item + '/node_modules/')
        if dir_child_node_modules.is_dir():
            node_modules_paths.append(dir_child_node_modules)
    print('👀 已找到包含 node_modules 文件夹的路径个数：', len(node_modules_paths), )

    def get_file_size(file_path, size=0):
        for root, dirs, files in os.walk(file_path):
            for f in files:
                size += os.path.getsize(os.path.join(root, f))
        return size

    def convert_file_size(size):
        kb = 1024
        mb = kb * 1024
        gb = mb * 1024
        tb = gb * 1024

        if size >= tb:
            return "%.1f TB" % float(size / tb)
        if size >= gb:
            return "%.1f GB" % float(size / gb)
        if size >= mb:
            return "%.1f MB" % float(size / mb)
        if size >= kb:
            return "%.1f KB" % float(size / kb)


    node_modules_size = 0
    if len(node_modules_paths) > 0:

        for node_modules_path in node_modules_paths:
            try:
                node_modules_size += get_file_size(Path(node_modules_path))
                shutil.rmtree(Path(node_modules_path))
            except IOError:
                print('删除失败！！！！')
            else:
                print('🎉 删除成功！ 路径：', node_modules_path)
        print("✅ 清理完成！")
        print('🚮 清理掉垃圾： ', convert_file_size(node_modules_size))
    else:
        print('🙅 当前 WorkSpace 无需清理！因为该 WorkSpace 子级路径下没有包含 node_modules 文件夹。')
